name: "net"
layer {
  name: "mnist_image"
  type: "Input"
  top: "mnist_image"
  input_param {
    shape {
      dim: 1
      dim: 1
      dim: 28
      dim: 28
    }
  }
}
layer {
  name: "label"
  type: "Input"
  top: "label"
  input_param {
    shape {
      dim: 1
      dim: 1
      dim: 1
      dim: 1
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "mnist_image"
  top: "conv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  bottom_data_type: CAFFE_INT8_QUANTIZED
  compute_data_type: CAFFE_INT8_QUANTIZED
  top_data_type: CAFFE_INT8_QUANTIZED
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  bottom_data_type: CAFFE_INT8_QUANTIZED
  compute_data_type: CAFFE_INT8_QUANTIZED
  top_data_type: CAFFE_INT8_QUANTIZED
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  bottom_data_type: CAFFE_INT8_QUANTIZED
  compute_data_type: CAFFE_INT8_QUANTIZED
  top_data_type: CAFFE_INT8_QUANTIZED
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  bottom_data_type: CAFFE_INT8_QUANTIZED
  compute_data_type: CAFFE_INT8_QUANTIZED
  top_data_type: CAFFE_INT8_QUANTIZED
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  bottom_data_type: CAFFE_INT8_QUANTIZED
  compute_data_type: CAFFE_INT8_QUANTIZED
  top_data_type: CAFFE_INT8_QUANTIZED
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "relu1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "relu1"
  top: "ip2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
  include {
    phase: TRAIN
  }
}
layer {
  name: "pred"
  type: "Softmax"
  bottom: "ip2"
  top: "pred"
  include {
    phase: TEST
  }
}

